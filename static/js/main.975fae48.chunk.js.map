{"version":3,"sources":["componenets/input.js","logo.svg","componenets/pokemon.js","App.js","serviceWorker.js","index.js"],"names":["styles","container","display","flexDirection","justifyContent","alignItems","input","margin","button","backgroundColor","color","textTransform","Input","props","onInput","event","setState","value","target","onSubmit","e","state","length","onInputSubmit","toLowerCase","style","TextField","label","placeholder","variant","InputLabelProps","shrink","onChange","this","onKeyPress","ev","key","preventDefault","Button","onClick","Component","card","width","height","logo","animation","left","top","sprite","bottom","typeList","type","borderRadius","right","moveHeader","fontWeight","textAlign","moveList","overflow","move","Pokemon","str","charAt","toUpperCase","substr","isNaN","name","number","types","moves","weight","loaded","Card","attachPound","firstUpper","tempURL","window","open","src","alt","className","hidden","map","i","typeColor","marginTop","elem","idx","title","fontSize","inputs","padding","LOADING_STATE","entry","stats","App","PokeAPI","bind","updateWindowDimensions","PokeAPIitem","windowWidth","windowHeight","console","log","addEventListener","removeEventListener","innerHeight","innerWidth","fetch","then","response","ok","failedRespones","Math","floor","random","json","data","newTypes","forEach","push","newStats","stat","base_stat","effort","newMoves","version_group_details","sprites","front_default","id","item","default","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.975fae48.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    input: {\n        margin: '10px'\n    },\n    button: {\n        backgroundColor: '#ee1515',\n        color: 'white',\n        margin: '0px 5px',\n        textTransform: 'none'\n    }\n};\n\nexport default class Input extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: ''\n        };\n    }\n\n  onInput = (event) => {\n      this.setState({ value: event.target.value });\n  }\n\n  onSubmit = (e) => {\n      if (this.state.value.length > 0)\n          this.props.onInputSubmit(this.state.value.toLowerCase());\n  }\n\n  render() {\n      return (\n          <div style={styles.container}>\n              <TextField\n                  // id=\"outlined-full-width\"\n                  label=\"Name or Number\"\n                  style={styles.input}\n                  placeholder=\"Charmander\"\n                  // helperText=\"Type a name or entry number\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                      shrink: true\n                  }}\n                  onChange={this.onInput}\n                  value={this.state.value}\n                  onKeyPress={(ev) => {\n                      if (ev.key === 'Enter') {\n                          ev.preventDefault();\n                          this.onSubmit();\n                      }\n                  }}\n              />\n              <Button\n                  variant=\"outlined\"\n                  style={styles.button}\n                  onClick={this.onSubmit}\n              >\n          Submit\n              </Button>\n          </div>\n      );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component } from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport logo from '../logo.svg';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nconst styles = {\n    card: {\n        margin: '20px',\n        width: '400px',\n        height: '300px',\n        display: 'flex',\n        backgroundColor: '#f0f0f0',\n        flexDirection: 'row',\n        justifyContent: 'space-evenly'\n    },\n\n    logo: {\n        animation: 'App-logo-spin infinite 20s linear',\n        // height: '20vmin',\n        height: '100%'\n    },\n\n    left: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    top: {\n        width: '90%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: '10px'\n    },\n    sprite: {\n        margin: '-5px 0px -5px 0px'\n    },\n    bottom: {\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        margin: '0px 0px 10px 0px'\n    },\n    // typeHeader: {\n    //   fontWeight: 'bold',\n    //   textAlign: 'center'\n    // },\n    typeList: {\n    // margin: '0px 0px 10px 0px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    type: {\n        width: '90px',\n        height: '30px',\n        color: 'white',\n        backgroundColor: '#68A090',\n        borderRadius: '40px',\n\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n\n    right: {\n        margin: '10px 0px 10px 0px',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    moveHeader: {\n        fontWeight: 'bold',\n        textAlign: 'center'\n    },\n    moveList: {\n        overflow: 'scroll'\n    },\n    move: {}\n};\n\nexport default class Pokemon extends Component {\n    firstUpper(str) {\n        if (typeof str === 'undefined') return null;\n\n        return str.charAt(0).toUpperCase() + str.substr(1);\n    }\n\n    attachPound(str) {\n        if (isNaN(str) || str.length === 0) return str;\n\n        return '#' + str;\n    }\n\n    // renderTypes() {\n    //   return <div style={styles.bottom} />\n    // }\n\n    render() {\n        const {\n            name,\n            number,\n            sprite,\n            types,\n            moves,\n            height,\n            weight,\n            loaded\n        } = this.props;\n\n        return (\n            <Card\n                style={\n                    this.props.shrink ? { ...styles.card, margin: '0px' } : styles.card\n                }\n            >\n                <div style={styles.left}>\n                    <div style={styles.top}>\n                        <div>{this.attachPound(number)} </div>\n                        <div>{this.firstUpper(name)}</div>\n                        <LaunchIcon\n                            onClick={() => {\n                                let tempURL = `https://pokeapi.co/api/v2/pokemon/${number}/`;\n                                if (!number) tempURL = `https://pokeapi.co/api/v2/item/${name}/`;\n                                window.open(tempURL, '_blank');\n                            }}\n                            style={{ width: '20px', height: '20px' }}\n                        />\n                    </div>\n                    <div style={styles.sprite}>\n                        {loaded ? (\n                            <img\n                                style={{ width: '150px', height: '150px' }}\n                                src={sprite}\n                                alt=\"pokemon sprite\"\n                            />\n                        ) : (\n                            <img\n                                src={logo}\n                                className=\"App-logo\"\n                                style={loaded ? { ...styles.logo, hidden: true } : styles.logo}\n                                alt=\"react logo\"\n                            />\n                        )}\n                    </div>\n                    <div style={styles.bottom}>\n                        {/* <div style={styles.typeHeader}>Types</div> */}\n                        <div style={styles.typeList}>\n                            {types.map((e, i) => {\n                                let typeColor = '#68A090';\n                                if (e === 'normal') typeColor = '#A8A878';\n                                else if (e === 'fire') typeColor = '#F08030';\n                                else if (e === 'fighting') typeColor = '#C03028';\n                                else if (e === 'water') typeColor = '#6890F0';\n                                else if (e === 'flying') typeColor = '#A890F0';\n                                else if (e === 'grass') typeColor = '#78C850';\n                                else if (e === 'poison') typeColor = '#A040A0';\n                                else if (e === 'electric') typeColor = '#F8D030';\n                                else if (e === 'ground') typeColor = '#E0C068';\n                                else if (e === 'psychic') typeColor = '#F85888';\n                                else if (e === 'rock') typeColor = '#B8A038';\n                                else if (e === 'ice') typeColor = '#98D8D8';\n                                else if (e === 'bug') typeColor = '#A8B820';\n                                else if (e === 'dragon') typeColor = '#7038F8';\n                                else if (e === 'ghost') typeColor = '#705898';\n                                else if (e === 'dark') typeColor = '#705848';\n                                else if (e === 'steel') typeColor = '#B8B8D0';\n                                else if (e === 'fairy') typeColor = '#EE99AC';\n                                else typeColor = '#68A090';\n\n                                return (\n                                    <div\n                                        style={\n                                            i > 0\n                                                ? {\n                                                    ...styles.type,\n                                                    marginTop: '8px',\n                                                    backgroundColor: typeColor\n                                                }\n                                                : { ...styles.type, backgroundColor: typeColor }\n                                        }\n                                        key={i}\n                                    >\n                                        {this.firstUpper(e)}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'row',\n                                justifyContent: 'space-around'\n                            }}\n                        >\n                            <div>Height: {height}</div>\n                            <div>Weight: {weight}</div>\n                        </div>\n                    </div>\n                </div>\n                <div style={styles.right}>\n                    <div style={styles.moveHeader}>Moves</div>\n                    <div style={styles.moveList}>\n                        {moves.map((elem, idx) => {\n                            return (\n                                <div style={styles.move} key={idx}>\n                                    {idx}.{this.firstUpper(elem.name)}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </Card>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport Input from './componenets/input';\nimport Pokemon from './componenets/pokemon';\n\nconst styles = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    title: { margin: '20px', fontSize: '24px' },\n    inputs: { padding: '10px' }\n};\n\nconst LOADING_STATE = {\n    loaded: false,\n    entry: '',\n    name: '',\n    sprite: '',\n    types: ['???'],\n    stats: [],\n    moves: [],\n    height: '',\n    weight: ''\n};\n\n// #ee1515 red\n// #f00000 red\n// #222224 black\n// #f0f0f0 white\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.PokeAPI = this.PokeAPI.bind(this);\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n        this.PokeAPIitem('4');\n\n        this.state = {\n            ...LOADING_STATE,\n            windowWidth: 0,\n            windowHeight: 0,\n            shrink: false\n        };\n\n        console.log('last updated: March 16, 2021');\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions() {\n        if (window.innerHeight < 500) {\n            if (!this.state.shrink) this.setState({ shrink: true });\n        } else {\n            if (this.state.shrink) this.setState({ shrink: false });\n        }\n        this.setState({\n            windowWidth: window.innerWidth,\n            windowHeight: window.innerHeight\n        });\n    }\n\n    PokeAPI(entry) {\n        this.setState({\n            ...LOADING_STATE\n        });\n        fetch(`https://pokeapi.co/api/v2/pokemon/${entry}/`)\n            .then((response) => {\n                if (!response.ok) {\n                    let failedRespones = [\n                        'You missed the Pokemon!',\n                        'Darn! The Pokemon broke free!',\n                        'Aww! It appeared to be caught!',\n                        'Shoot! It was so close too!'\n                    ];\n                    console.log(\n                        failedRespones[Math.floor(Math.random() * failedRespones.length)]\n                    );\n\n                    return false;\n                }\n\n                return response.json();\n            })\n            .then((data) => {\n                if (!data) return;\n                // console.log(data)\n\n                let newTypes = [];\n                data.types.forEach((e) => {\n                    newTypes.push(e.type.name);\n                });\n\n                let newStats = [];\n                data.stats.forEach((e) => {\n                    newStats.push({\n                        name: e.stat.name,\n                        base_stat: e.base_stat,\n                        effort: e.effort\n                    });\n                });\n\n                let newMoves = [];\n                data.moves.forEach((e, i) => {\n                    newMoves.push({\n                        name: e.move.name,\n                        version_group_details: e.version_group_details\n                    });\n                });\n\n                this.setState({\n                    name: data.name,\n                    sprite: data.sprites.front_default,\n                    entry: data.id,\n                    types: newTypes,\n                    stats: newStats,\n                    moves: newMoves,\n                    height: data.height,\n                    weight: data.weight,\n                    loaded: true\n                });\n                console.log(\n                    `All right! ${data.name.charAt(0).toUpperCase() +\n            data.name.substr(1)} was caught!`\n                );\n            });\n    }\n\n    PokeAPIitem(item) {\n        // uncomment when incorporating items\n        // this.setState({\n        //   ...LOADING_STATE\n        // })\n        fetch(`https://pokeapi.co/api/v2/item/${item}/`)\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                this.setState({\n                    name: data.name,\n                    sprite: data.sprites.default,\n                    entry: '',\n                    types: [],\n                    loaded: true\n                });\n            });\n    }\n\n    render() {\n        // console.log(this.state)\n        return (\n            <div className=\"App\" style={styles.container}>\n                {this.state.shrink ? (\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            alignItems: 'center'\n                        }}>\n                        <div style={{ margin: '10px', fontSize: '24px' }}>\n                            Pokédex\n                        </div>\n                        <div style={{ padding: '5px' }}>\n                            <Input onInputSubmit={this.PokeAPI} shrink={this.state.shrink} />\n                        </div>\n                    </div>\n                ) : null}\n                {this.state.shrink ? null : (\n                    <div style={styles.title}>Pokédex Lookup</div>\n                )}\n\n                {this.state.shrink ? null : (\n                    <div style={styles.inputs}>\n                        <Input onInputSubmit={this.PokeAPI} />\n                    </div>\n                )}\n\n                <Pokemon\n                    name={this.state.name}\n                    number={this.state.entry}\n                    sprite={this.state.sprite}\n                    types={this.state.types}\n                    stats={this.state.stats}\n                    moves={this.state.moves}\n                    height={this.state.height}\n                    weight={this.state.weight}\n                    loaded={this.state.loaded}\n                    shrink={this.state.shrink} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}